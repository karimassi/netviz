{"version":3,"sources":["network.js"],"names":["$","net","Network","d3","json","then","data","build_network","container","_classCallCheck","this","self","edges","nodes","node","push","id","color","forEach","edge","x","source","y","target","size","process_nodes","process_edges","type","document","getElementById","settings","doubleClickEnabled","minEdgeSize","maxEdgeSize","enableEdgeHovering","edgeHoverColor","defaultEdgeHoverColor","edgeHoverSizeRatio","number","toString","slice"],"mappings":"mZAAAA,EAAE,WACD,IAAMC,EAAM,IAAIC,QAAQ,kBACxBC,GAAGC,KAAK,4BAA4BC,KAAK,SAAAC,GACxCL,EAAIM,cAAcD,O,IAIdJ,Q,WAPL,SAAAA,EAACM,GAAWC,gBAAAC,KAAAR,GACZS,KAAMV,UAAUC,EAChBC,KAAGC,MAAK,GACPH,KAAGW,MAACL,G,kDAWL,SAAcM,GACbA,EARIX,QAQU,SAAAY,GAPfH,KAAAE,MAAAE,KAAYP,CAAWQ,GAAAF,EAAAE,GACtBL,EAAAA,EAAKH,EACLG,EAAAA,EAAKE,EACLF,KAAKC,GACLK,MAAA,gB,2BAGAJ,SAAMK,GACLP,EAAAA,QAAKE,SAAAA,GACJG,KAAAA,MAAIF,KAAKE,CACTA,GAAAG,EAAAH,GACAI,OAACD,EAAME,OACPC,OAACH,EAAMI,OACPC,KAAAA,QACAP,MAAAA,a,2BAiBH,SAAcX,GACbI,KAAKe,cAAcnB,EAAKO,OACxBH,KAAKgB,cAdNpB,EAAAM,OACCA,EAAAA,CAAKC,MAACK,KAAQL,MAAAM,MAAQR,KAAAC,OAEpBI,IAAIG,MAAKH,CACTK,MAAAA,EACAE,SAAAA,CACAI,UAAIC,SAJWC,eAAAlB,KAAAH,WAKfS,KAAAA,UAEDa,SARD,CASAC,oBAAA,EAeEC,YAAa,GACbC,YAAa,EACbC,oBAfH,EACCC,eAAKV,OACLW,sBAAmB9B,OACnB+B,mBAAQ,EAACxB,sBAAD,S,KAKNL,SAAAA,YAAWoB,GACXD,MAAAA,KAAIW,IAAE,GAAAC,SAAA,IAAAC,OAAA","file":"network.js","sourcesContent":["$(function() {\n\tconst net = new Network(\"movies-network\")\n\td3.json(\"data/movies_network.json\").then(data => {\n\t\tnet.build_network(data)\n\t});\n})\n\nclass Network {\n\tconstructor(container) {\n\t\tself.container = container;\n\t\tself.nodes = [];\n\t\tself.edges = [];\n\t}\n\n\tprocess_nodes(nodes) {\n\t\tnodes.forEach(node => {\n\t\t\tself.nodes.push({\n\t\t\t\tid: node.id, \n\t\t\t\t// label: node.name,\n\t\t\t\tx: node.x,\n\t\t\t\ty: node.y, \n\t\t\t\tsize: 0.1,\n\t\t\t\tcolor: \"#ff0000\"//getHexColor(2**node.audio)\n\t\t\t})\n\t\t});\n\t}\n\n\tprocess_edges(edges) {\n\t\tedges.forEach(edge => {\n\t\t\tself.edges.push({\n\t\t\t\tid: edge.id, \n\t\t\t\tsource: edge.source,\n\t\t\t\ttarget: edge.target,\n\t\t\t\ttype: 'curve',\n\t\t\t\tcolor: '#eee'\n\t\t\t})\n\t\t});\n\t}\n\n\tbuild_network(data) {\n\t\tthis.process_nodes(data.nodes);\n\t\tthis.process_edges(data.edges);\n\t\tlet g = {nodes: self.nodes, edges: self.edges};\n\n\t\tlet s = new sigma({\n\t\t\tgraph: g,\n\t\t\trenderer: {\n\t\t\t\tcontainer: document.getElementById(self.container),\n\t\t\t\ttype: 'canvas'\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tdoubleClickEnabled: false,\n\t\t\t\tminEdgeSize: 0.5,\n\t\t\t\tmaxEdgeSize: 4,\n\t\t\t\tenableEdgeHovering: true,\n\t\t\t\tedgeHoverColor: 'edge',\n\t\t\t\tdefaultEdgeHoverColor: '#000',\n\t\t\t\tedgeHoverSizeRatio: 1,\n\t\t\t\tedgeHoverExtremities: true,\n\t\t\t}\n\t\t})\n\t}\n} \n\nfunction getHexColor(number){\n\treturn \"#\"+((number)>>>0).toString(16).slice(-6);\n}"]}