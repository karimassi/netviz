{"version":3,"sources":["age_rating_bar.js"],"names":["AgeRatingDistributionPlot","svgElement","_classCallCheck","this","svg","bars","yTickValues","currentData","setup","width","xSideGap","append","attr","style","text","height","tickPositionValuePairsOneSided","axis","concat","ticksX","flatMap","v","position","value","selectAll","data","ticks","tick","percentage","yAxisWidth","_this","middle_bar","VALUE_OFFSET","values","name","_","i","distanceFromMiddle","defaultBarColor","hoverBarColor","VALUE_GAP","BAR_OFFSET","getManipulableElements","selection","_groups","showBars","barWidth","movieBars","forEach","movies","point","select","index","shows","d3","tooltipGroup","sizeX","sizeY","createXAxis","createYAxisAndBars","sideGap","createInfoTexts","createTooltip","maxBarWidth","transition","BAR_COLOR","HOVER_COLOR","handleMouseOver","TOOLTIP_GROUP","handleMouseMove","setupTooltip","element","on","mouse","node","duration","margin","padding","tooltipText","toFixed","textSize","getBBox","_d3$mouse2","_slicedToArray","SVG","_ref","y","plot","showInitialPlot","d","handleMouseOut","selector","isNaN","dataPoint","stats_for_year","_this2","$","TimeSelector","year","updateData","csv","then","undefined","category","parseFloat","delay","setValue","click","parseInt","val"],"mappings":"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","file":"age_rating_bar.js","sourcesContent":["class AgeRatingDistributionPlot {\n  constructor(svgElement) {\n    this.svg = svgElement;\n    this.bars = {};\n    this.yTickValues = ['NR', '3+', '7+', '10+', '13+', '16+', '18+'];\n    this.currentData = {};\n    this.setup();\n  }\n\n  /**\n   * Creates texts in corners (Movies/TV Shows)\n   */\n  createInfoTexts(width, xSideGap) {\n    this.svg.append('text')\n      .attr('x', xSideGap)\n      .attr('fill', '#DB0000')\n      .style('font-size', '1.6em')\n      .style('text-anchor', 'start')\n      .style('alignment-baseline', 'hanging')\n      .text('Movies');\n\n    this.svg.append('text')\n      .attr('x', width - xSideGap)\n      .attr('fill', '#DB0000')\n      .style('font-size', '1.6em')\n      .style('text-anchor', 'end')\n      .style('alignment-baseline', 'hanging')\n      .text('TV Shows');\n  }\n\n  /**\n   * Creates X axis and sets its ticks\n   */\n  createXAxis(width, height, tickPositionValuePairsOneSided) {\n    const axis = this.svg.append('g')\n      .attr('width', width)\n      .attr('transform', `translate(0, ${height - 50})`);\n\n    axis.append('line')\n      .attr('stroke', 'whitesmoke')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', width)\n      .attr('y2', 0);\n\n    const ticksX = tickPositionValuePairsOneSided.flatMap(v =>\n      [{\n        position: v[0],\n        value: v[1]\n      }, {\n        position: width - v[0],\n        value: v[1]\n      }]);\n    const ticks = axis.selectAll('.plot-tick')\n      .data(ticksX)\n      .enter();\n\n    ticks.append('line')\n      .attr('stroke', 'whitesmoke')\n      .attr('x1', tick => tick.position)\n      .attr('y1', 0)\n      .attr('x2', tick => tick.position)\n      .attr('y2', 5);\n\n    ticks.append('text')\n      .attr('fill', 'whitesmoke')\n      .attr('y', 10)\n      .attr('x', tick => tick.position)\n      .style('text-anchor', 'middle')\n      .style('alignment-baseline', 'hanging')\n      .text(tick => tick.value + '%');\n  }\n\n  /**\n   * Returns the size of bar depending on percentage\n   */\n  barWidth(percentage) {\n    return percentage * this.maxBarWidth;\n  }\n\n  /**\n   * Creates text values on Y axis in the middle of the plot, as well as\n   *  corresponding bars for each\n   */\n  createYAxisAndBars(width, height, yAxisWidth) {\n    const middle_bar = this.svg.append('g')\n      .attr('width', yAxisWidth)\n      .attr('transform', `translate(${width / 2}, ${height - 50})`);\n\n    const BAR_HEIGHT = 40;\n    const BAR_OFFSET = 32;\n    const VALUE_GAP = 60;\n    const VALUE_OFFSET = 30;\n\n    const values = middle_bar.selectAll('.middle-bar-value')\n      .data(this.yTickValues)\n      .enter();\n    values.append('text')\n      .attr('fill', 'whitesmoke')\n      .attr('x', 0)\n      .attr('y', (_, i) => -(VALUE_OFFSET + VALUE_GAP * i))\n      .style('text-anchor', 'middle')\n      .style('alignment-baseline', 'ideographic')\n      .text(name => name);\n\n    const distanceFromMiddle = this.yAxisWidth / 2;\n\n    this.defaultBarColor = '#DB0000';\n    this.hoverBarColor = '#800000';\n\n    const showBars = values.append('rect')\n      .attr('fill', this.defaultBarColor)\n      .attr('y', (_, i) => -(VALUE_OFFSET + VALUE_GAP * i + BAR_OFFSET))\n      .attr('x', distanceFromMiddle)\n      .attr('height', BAR_HEIGHT)\n      .attr('width', this.barWidth(0));\n      // .on('mouseover', d => handleBarMouseOver(d, middle_bar))\n      // .on('mouseout', d => handleBarMouseOut(d));\n\n    const movieBars = values.append('rect')\n      .attr('fill', this.defaultBarColor)\n      .attr('y', (_, i) => -(VALUE_OFFSET + VALUE_GAP * i + BAR_OFFSET))\n      .attr('x', point => -(distanceFromMiddle + this.barWidth(0)))\n      .attr('height', BAR_HEIGHT)\n      .attr('width', this.barWidth(0));\n      // .on('mouseover', d => handleBarMouseOver(d, middle_bar))\n      // .on('mouseout', d => handleBarMouseOut(d));\n\n    const getManipulableElements = selection => selection._groups[0];\n    this.yTickValues.forEach((value, index) => {\n      this.bars[value] = {\n        movies: d3.select(getManipulableElements(movieBars)[index]),\n        shows: d3.select(getManipulableElements(showBars)[index])\n      }\n    });\n  }\n\n  /**\n   * Creates the box that appears when a bar is hovered\n   */\n  createTooltip() {\n    const tooltipGroup = this.svg.append('g')\n      .attr('id', 'age-rating-distribution-tooltip')\n      .style('alignment-baseline', 'baseline')\n      .style('visiblity', 'hidden');\n      // .attr('class', 'tooltip');\n    const tooltipBox = tooltipGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('fill', 'whitesmoke')\n      .attr('rx', 4);\n    const tooltipText = tooltipGroup\n      .append('text')\n      .attr('fill', 'black')\n      .style('alignment-baseline', 'hanging')\n      .style('text-anchor', 'start')\n      .text('');\n  }\n\n  /**\n   * Creates GUI and sets the initial state of the plot\n   */\n  setup() {\n    const main_color = 'whitesmoke';\n    let [sizeX, sizeY] = [800, 530];\n    this.svg.attr('viewBox', `0 0 ${sizeX} ${sizeY}`);\n\n    this.yAxisWidth = 50;\n    this.maxBarWidth = (sizeX - this.yAxisWidth) / 2 - 30;\n\n    this.createXAxis(sizeX, sizeY, [\n      [(sizeX - this.yAxisWidth) / 2 - this.maxBarWidth, 100],\n      [(sizeX - this.yAxisWidth) / 2, 0]\n    ]);\n\n    this.createYAxisAndBars(sizeX, sizeY);\n\n    const sideGap = (sizeX - this.yAxisWidth) / 2 - this.maxBarWidth;\n    this.createInfoTexts(sizeX, sideGap);\n\n    this.createTooltip();\n  }\n\n  /**\n   * Updates size of elements depending on the received data and\n   *  changes event functions of the tooltip to match the new data\n   */\n  updateData(data) {\n    this.currentData = data;\n    const distanceFromMiddle = this.yAxisWidth / 2;\n    const transition = d3.transition(d3.easeCubicOut).duration(1000);\n\n    const BAR_COLOR = this.defaultBarColor;\n    const HOVER_COLOR = this.hoverBarColor;\n    const SVG = this.svg;\n    const TOOLTIP_GROUP = d3.select('#age-rating-distribution-tooltip');\n\n    const setupTooltip = function(element, data) {\n      const handleMouseOver = function(d) {\n        d3.select(this)\n          .transition()\n          .duration(500)\n          .attr('fill', HOVER_COLOR);\n        const tooltipText = TOOLTIP_GROUP.select('text');\n        const padding = {\n          x: 10,\n          y: 10\n        };\n        tooltipText\n          .attr('x', padding.x)\n          .attr('y', padding.y)\n          .text((data * 100).toFixed(1) + '%');\n        const textSize = tooltipText.node().getBBox();\n        TOOLTIP_GROUP.select('rect')\n          .attr('width', textSize.width + 2 * padding.x)\n          .attr('height', textSize.height + 2 * padding.y);\n        TOOLTIP_GROUP\n          .style('visibility', 'visible');\n        // d3.select().style('visibility', 'visible');\n      };\n\n      const handleMouseOut = function(d) {\n        d3.select(this)\n          .transition()\n          .duration(500)\n          .attr('fill', BAR_COLOR);\n        const tooltipText = TOOLTIP_GROUP.select('text');\n        tooltipText\n          .text('');\n        TOOLTIP_GROUP\n          .style('visibility', 'hidden');\n      };\n      const handleMouseMove = function(d) {\n        const [mouseX, mouseY] = d3.mouse(SVG.node());\n        const margin = {\n          x: 2,\n          y: 2\n        };\n        const tooltipBox = TOOLTIP_GROUP.select('rect');\n        const [x, y] = [\n          mouseX + margin.x,\n          mouseY - tooltipBox.node().getBBox().height - margin.y];\n        TOOLTIP_GROUP.attr('transform', `translate(${x}, ${y})`);\n      };\n\n      element\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut);\n    }\n\n    this.yTickValues.forEach(value => {\n      if(isNaN(data[value].movies)) {\n        data[value].movies = 0;\n      }\n      if(isNaN(data[value].shows)) {\n        data[value].shows = 0;\n      }\n      setupTooltip(this.bars[value].movies, data[value].movies);\n      this.bars[value].movies\n        .transition(transition)\n        .attr('x', -(distanceFromMiddle + this.barWidth(data[value].movies)))\n        .attr('width', this.barWidth(data[value].movies));\n\n      setupTooltip(this.bars[value].shows, data[value].shows);\n      this.bars[value].shows\n        .transition(transition)\n        .attr('width', this.barWidth(data[value].shows));\n    });\n  }\n}\n\n$(() => {\n  const svg = d3.select('svg#age-rating-distribution-plot')\n  const plot =  new AgeRatingDistributionPlot(svg);\n\n  const stats_for_year = {};\n\n  const selector = new TimeSelector(\n    'content-time-selection',\n    [2015, 2021],\n    year => plot.updateData(stats_for_year[year]),\n    10000,\n    'int'\n  );\n\n  function showInitialPlot() {\n    svg.style('opacity', 0);\n    svg.transition()\n      .delay(1000)\n      .duration(600)\n      .style('opacity', 1);\n    selector.setValue(2015);\n  }\n\n  d3.csv('data/age_rating_per_year_distribution.csv')\n    .then(data => {\n      data.forEach(dataPoint => {\n        if(stats_for_year[dataPoint.year] === undefined) {\n          stats_for_year[dataPoint.year] = {};\n        }\n        if(stats_for_year[dataPoint.year][dataPoint['age rating']] === undefined) {\n          stats_for_year[dataPoint.year][dataPoint['age rating']] = {};\n        }\n        stats_for_year[dataPoint.year][dataPoint['age rating']][dataPoint.category] = parseFloat(dataPoint.percentage)\n      });\n\n      showInitialPlot();\n    });\n\n  $('#content-button').click(() => {\n    const year = parseInt($('#content-year-option').val());\n    plot.updateData(stats_for_year[year]);\n  });\n\n\n});\n"]}