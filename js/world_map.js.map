{"version":3,"sources":["world_map.js"],"names":["updateCountryPassport","name","info","d3","json","find","then","data","text","$","html","concat","count_movies","count_series","genres","join","map","WorldMapPlot","draw","id","_classCallCheck","this","callback","vectorMap","hoverColor","backgroundColor","regionsSelectable","regionsSelectableOne","regionStyle","initial","fill","fill-opacity","hover","selected","zoomMin","zoomStep","event","code","isSelected","getRegionName"],"mappings":"mZACE,SAASA,sBAAqBC,EAAAC,GAC9BC,EAAGC,qBAAKC,KAAA,MAA4BC,KAAKL,QACzB,IAAJC,EAAAD,GACRD,EAAAA,qBAAsBC,KAAMM,KAA5BC,KAAA,gDAFJC,EAAA,qBAAAJ,KAAA,KAAAK,KAAA,aAAAC,OAAAT,EAAAD,GAAAW,aAAA,gBAAAD,OAAAT,EAAAD,GAAAY,aAAA,oEAAAF,OAAAT,EAAAD,GAAAa,OAAAC,KAAA,MAAA,MAFFN,EAAE,WACA,IAAMO,EAAO,IAAIC,aAAa,cAC9Bd,GAAGC,KAAK,4BAA4BE,KAAK,SAAAC,GACvCS,EAAIE,KAAM,SAAAjB,GACRD,sBAAsBC,EAAMM,S,IAM7BU,a,WASH,SAAAA,EAAYE,GAAIC,gBAAAC,KAAAJ,GARhBI,KAAIF,GAAOjB,S,kCAGPO,SAAEa,GACLb,EAAAY,KAAAF,IAAAI,UAAA,CACFP,IAAA,aAGCQ,YAAA,EAAgBC,gBAAA,OAWZC,mBAAmB,EAVrBC,sBAAA,EACDC,YAAA,CAYKC,QAAS,CACPC,KAAM,OACNC,eAAgB,GAXpBC,MAAD,CACChB,eADmB,IAGnBiB,SAAA,CACAT,KAAAA,OAEAE,cAAAA,CACAC,eAAAA,IAGIG,QAAAA,EACAI,QAAA,EAFOC,SADE,IAKXH,iBAAO,SAAAI,EAAAC,EAAAC,GACLA,IANStB,EAAAP,EAAA,cAAAc,UAAA,MAAA,aAQXU,EAAQjB,EAAEuB,cAAAF,c","file":"world_map.js","sourcesContent":["$(function() {\n  const map =  new WorldMapPlot(\"#world-map\");\n  d3.json(\"data/countries_info.json\").then(data => {\n    map.draw((name => {\n      updateCountryPassport(name, data)\n    }))\n  });\n})\n\nfunction updateCountryPassport(name, info) {\n  $( \"#country-passport\" ).find(\"h4\").text(name)\n  if (typeof info[name] == 'undefined') {\n      $(\"#country-passport\").find(\"p\").text(\"No information available for that country...\")\n  } else {\n      $(\"#country-passport\").find(\"p\").html(`There are ${info[name].count_movies} movies and ${info[name].count_series} series available in this country.<br><br>The top 10 genres are ${info[name].genres.join(', ')}.`)\n  }\n}\n\nclass WorldMapPlot {\n  constructor(id) {\n    this.id = id\n  }\n\n  draw(callback) {\n    $(this.id).vectorMap({\n      map: 'world_mill',\n      // zoomOnScroll: true, \n      // panOnDrag: true, \n      hoverColor: false,\n      backgroundColor: '#000',\n      regionsSelectable: true,\n      regionsSelectableOne: true,\n      regionStyle: {\n        initial: {\n          fill: 'gray',\n          \"fill-opacity\": 1,\n        },\n        hover: {\n          \"fill-opacity\": 0.8,\n        },\n        selected: {\n          fill: 'red'\n        },\n        selectedHover: {\n          \"fill-opacity\": 1,\n        }\n      },\n      zoomMax: 8, \n      zoomMin: 1, \n      zoomStep: 1.6,\n      onRegionSelected: ((event, code, isSelected) => {\n        if (isSelected) {\n          let map=$('#world-map').vectorMap('get', 'mapObject');\n          callback(map.getRegionName(code))\n        }\n      })\n    });  \n  }\n}"]}